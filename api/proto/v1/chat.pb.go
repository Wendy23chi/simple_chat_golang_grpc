// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package chat

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//
type UserCred struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserCred) Reset()         { *m = UserCred{} }
func (m *UserCred) String() string { return proto.CompactTextString(m) }
func (*UserCred) ProtoMessage()    {}
func (*UserCred) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{0}
}

func (m *UserCred) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCred.Unmarshal(m, b)
}
func (m *UserCred) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCred.Marshal(b, m, deterministic)
}
func (m *UserCred) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCred.Merge(m, src)
}
func (m *UserCred) XXX_Size() int {
	return xxx_messageInfo_UserCred.Size(m)
}
func (m *UserCred) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCred.DiscardUnknown(m)
}

var xxx_messageInfo_UserCred proto.InternalMessageInfo

func (m *UserCred) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserCred) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UserList struct {
	Users                []*UserCred `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserList) Reset()         { *m = UserList{} }
func (m *UserList) String() string { return proto.CompactTextString(m) }
func (*UserList) ProtoMessage()    {}
func (*UserList) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{1}
}

func (m *UserList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserList.Unmarshal(m, b)
}
func (m *UserList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserList.Marshal(b, m, deterministic)
}
func (m *UserList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserList.Merge(m, src)
}
func (m *UserList) XXX_Size() int {
	return xxx_messageInfo_UserList.Size(m)
}
func (m *UserList) XXX_DiscardUnknown() {
	xxx_messageInfo_UserList.DiscardUnknown(m)
}

var xxx_messageInfo_UserList proto.InternalMessageInfo

func (m *UserList) GetUsers() []*UserCred {
	if m != nil {
		return m.Users
	}
	return nil
}

type Room struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Room) Reset()         { *m = Room{} }
func (m *Room) String() string { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()    {}
func (*Room) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{2}
}

func (m *Room) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Room.Unmarshal(m, b)
}
func (m *Room) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Room.Marshal(b, m, deterministic)
}
func (m *Room) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Room.Merge(m, src)
}
func (m *Room) XXX_Size() int {
	return xxx_messageInfo_Room.Size(m)
}
func (m *Room) XXX_DiscardUnknown() {
	xxx_messageInfo_Room.DiscardUnknown(m)
}

var xxx_messageInfo_Room proto.InternalMessageInfo

func (m *Room) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

//
type RoomList struct {
	Rooms                []*Room  `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomList) Reset()         { *m = RoomList{} }
func (m *RoomList) String() string { return proto.CompactTextString(m) }
func (*RoomList) ProtoMessage()    {}
func (*RoomList) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{3}
}

func (m *RoomList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomList.Unmarshal(m, b)
}
func (m *RoomList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomList.Marshal(b, m, deterministic)
}
func (m *RoomList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomList.Merge(m, src)
}
func (m *RoomList) XXX_Size() int {
	return xxx_messageInfo_RoomList.Size(m)
}
func (m *RoomList) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomList.DiscardUnknown(m)
}

var xxx_messageInfo_RoomList proto.InternalMessageInfo

func (m *RoomList) GetRooms() []*Room {
	if m != nil {
		return m.Rooms
	}
	return nil
}

type RoomRequest struct {
	Room                 *Room     `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	Cred                 *UserCred `protobuf:"bytes,2,opt,name=cred,proto3" json:"cred,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RoomRequest) Reset()         { *m = RoomRequest{} }
func (m *RoomRequest) String() string { return proto.CompactTextString(m) }
func (*RoomRequest) ProtoMessage()    {}
func (*RoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{4}
}

func (m *RoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomRequest.Unmarshal(m, b)
}
func (m *RoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomRequest.Marshal(b, m, deterministic)
}
func (m *RoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomRequest.Merge(m, src)
}
func (m *RoomRequest) XXX_Size() int {
	return xxx_messageInfo_RoomRequest.Size(m)
}
func (m *RoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RoomRequest proto.InternalMessageInfo

func (m *RoomRequest) GetRoom() *Room {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *RoomRequest) GetCred() *UserCred {
	if m != nil {
		return m.Cred
	}
	return nil
}

type Reply struct {
	IsSuccess            bool     `protobuf:"varint,1,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{5}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *Reply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ClientMessage struct {
	Message              string    `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Room                 *Room     `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"`
	Cred                 *UserCred `protobuf:"bytes,3,opt,name=cred,proto3" json:"cred,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ClientMessage) Reset()         { *m = ClientMessage{} }
func (m *ClientMessage) String() string { return proto.CompactTextString(m) }
func (*ClientMessage) ProtoMessage()    {}
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{6}
}

func (m *ClientMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientMessage.Unmarshal(m, b)
}
func (m *ClientMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientMessage.Marshal(b, m, deterministic)
}
func (m *ClientMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientMessage.Merge(m, src)
}
func (m *ClientMessage) XXX_Size() int {
	return xxx_messageInfo_ClientMessage.Size(m)
}
func (m *ClientMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ClientMessage proto.InternalMessageInfo

func (m *ClientMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ClientMessage) GetRoom() *Room {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *ClientMessage) GetCred() *UserCred {
	if m != nil {
		return m.Cred
	}
	return nil
}

type MessageRequest struct {
	Room                 *Room     `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	Cred                 *UserCred `protobuf:"bytes,2,opt,name=cred,proto3" json:"cred,omitempty"`
	StartIndex           int32     `protobuf:"varint,3,opt,name=startIndex,proto3" json:"startIndex,omitempty"`
	EndIndex             int32     `protobuf:"varint,4,opt,name=endIndex,proto3" json:"endIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MessageRequest) Reset()         { *m = MessageRequest{} }
func (m *MessageRequest) String() string { return proto.CompactTextString(m) }
func (*MessageRequest) ProtoMessage()    {}
func (*MessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{7}
}

func (m *MessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageRequest.Unmarshal(m, b)
}
func (m *MessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageRequest.Marshal(b, m, deterministic)
}
func (m *MessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageRequest.Merge(m, src)
}
func (m *MessageRequest) XXX_Size() int {
	return xxx_messageInfo_MessageRequest.Size(m)
}
func (m *MessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MessageRequest proto.InternalMessageInfo

func (m *MessageRequest) GetRoom() *Room {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *MessageRequest) GetCred() *UserCred {
	if m != nil {
		return m.Cred
	}
	return nil
}

func (m *MessageRequest) GetStartIndex() int32 {
	if m != nil {
		return m.StartIndex
	}
	return 0
}

func (m *MessageRequest) GetEndIndex() int32 {
	if m != nil {
		return m.EndIndex
	}
	return 0
}

type ChatHistory struct {
	Messages             []*ClientMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ChatHistory) Reset()         { *m = ChatHistory{} }
func (m *ChatHistory) String() string { return proto.CompactTextString(m) }
func (*ChatHistory) ProtoMessage()    {}
func (*ChatHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{8}
}

func (m *ChatHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatHistory.Unmarshal(m, b)
}
func (m *ChatHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatHistory.Marshal(b, m, deterministic)
}
func (m *ChatHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatHistory.Merge(m, src)
}
func (m *ChatHistory) XXX_Size() int {
	return xxx_messageInfo_ChatHistory.Size(m)
}
func (m *ChatHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatHistory.DiscardUnknown(m)
}

var xxx_messageInfo_ChatHistory proto.InternalMessageInfo

func (m *ChatHistory) GetMessages() []*ClientMessage {
	if m != nil {
		return m.Messages
	}
	return nil
}

func init() {
	proto.RegisterType((*UserCred)(nil), "chat.UserCred")
	proto.RegisterType((*UserList)(nil), "chat.userList")
	proto.RegisterType((*Room)(nil), "chat.Room")
	proto.RegisterType((*RoomList)(nil), "chat.RoomList")
	proto.RegisterType((*RoomRequest)(nil), "chat.RoomRequest")
	proto.RegisterType((*Reply)(nil), "chat.Reply")
	proto.RegisterType((*ClientMessage)(nil), "chat.ClientMessage")
	proto.RegisterType((*MessageRequest)(nil), "chat.MessageRequest")
	proto.RegisterType((*ChatHistory)(nil), "chat.ChatHistory")
}

func init() {
	proto.RegisterFile("chat.proto", fileDescriptor_8c585a45e2093e54)
}

var fileDescriptor_8c585a45e2093e54 = []byte{
	// 426 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xd1, 0x6a, 0xd5, 0x40,
	0x10, 0x6d, 0x6e, 0x13, 0x4d, 0x27, 0x58, 0x74, 0xf4, 0xe1, 0x12, 0xa4, 0x5c, 0x16, 0x91, 0x22,
	0xa5, 0xb6, 0xf5, 0x55, 0x14, 0xcc, 0x43, 0x55, 0xea, 0x83, 0x5b, 0xfc, 0x80, 0x98, 0x0c, 0x6d,
	0xa0, 0xd9, 0xbd, 0xee, 0x6c, 0xd0, 0xfe, 0x85, 0x1f, 0xe2, 0x47, 0xca, 0xee, 0x26, 0x31, 0xb9,
	0x2d, 0xf6, 0xa5, 0x6f, 0x3b, 0x73, 0x66, 0xce, 0x9c, 0x33, 0x93, 0x00, 0x54, 0x97, 0xa5, 0x3d,
	0x5c, 0x1b, 0x6d, 0x35, 0xc6, 0xee, 0x2d, 0x3e, 0x40, 0xfa, 0x8d, 0xc9, 0x14, 0x86, 0x6a, 0xcc,
	0x21, 0xed, 0x98, 0x8c, 0x2a, 0x5b, 0x5a, 0x46, 0xab, 0x68, 0x7f, 0x47, 0x8e, 0xb1, 0xc3, 0xd6,
	0x25, 0xf3, 0x4f, 0x6d, 0xea, 0xe5, 0x22, 0x60, 0x43, 0x2c, 0x8e, 0x42, 0xdf, 0x59, 0xc3, 0x16,
	0x5f, 0x40, 0xe2, 0xde, 0xbc, 0x8c, 0x56, 0xdb, 0xfb, 0xd9, 0xc9, 0xee, 0xa1, 0x9f, 0x38, 0x8c,
	0x90, 0x01, 0x14, 0x39, 0xc4, 0x52, 0xeb, 0x16, 0x11, 0xe2, 0xc9, 0x34, 0xff, 0x16, 0x07, 0x90,
	0x3a, 0xcc, 0xb3, 0xad, 0x20, 0x31, 0x5a, 0xb7, 0x03, 0x1b, 0x04, 0x36, 0x07, 0xcb, 0x00, 0x88,
	0xaf, 0x90, 0xf9, 0x90, 0x7e, 0x74, 0xc4, 0x16, 0xf7, 0x20, 0x76, 0x79, 0x4f, 0x38, 0xaf, 0xf7,
	0x79, 0x14, 0x10, 0x57, 0x86, 0x82, 0x85, 0x9b, 0xea, 0x3c, 0x26, 0xde, 0x43, 0x22, 0x69, 0x7d,
	0x75, 0x8d, 0xcf, 0x61, 0xa7, 0xe1, 0xf3, 0xae, 0xaa, 0x88, 0xd9, 0x33, 0xa6, 0xf2, 0x5f, 0x02,
	0x97, 0xf0, 0xb0, 0x25, 0xe6, 0xf2, 0x82, 0xfa, 0x85, 0x0c, 0xa1, 0x68, 0xe1, 0x51, 0x71, 0xd5,
	0x90, 0xb2, 0x5f, 0x42, 0x62, 0x5a, 0x1a, 0xcd, 0x4a, 0x47, 0xbd, 0x8b, 0x3b, 0xf4, 0x6e, 0xff,
	0x47, 0xef, 0xef, 0x08, 0x76, 0xfb, 0x49, 0xf7, 0xb8, 0x06, 0xdc, 0x03, 0x60, 0x5b, 0x1a, 0xfb,
	0x49, 0xd5, 0xf4, 0xcb, 0x0b, 0x48, 0xe4, 0x24, 0xe3, 0xbe, 0x08, 0x52, 0x75, 0x40, 0x63, 0x8f,
	0x8e, 0xb1, 0x78, 0x07, 0x59, 0x71, 0x59, 0xda, 0x8f, 0x0d, 0x5b, 0x6d, 0xae, 0xf1, 0x35, 0xa4,
	0xbd, 0xe1, 0xe1, 0x92, 0x4f, 0xc3, 0xc8, 0xd9, 0x9a, 0xe4, 0x58, 0x74, 0xf2, 0x67, 0x01, 0xb1,
	0x23, 0xc0, 0x97, 0x90, 0x9c, 0xe9, 0x8b, 0x46, 0xe1, 0x86, 0xc6, 0x3c, 0xeb, 0x3d, 0xb9, 0x43,
	0x89, 0x2d, 0x7c, 0x05, 0xe9, 0x29, 0x59, 0xe7, 0x90, 0x6f, 0x94, 0x4e, 0xec, 0x8b, 0xad, 0xa3,
	0x08, 0x0f, 0x20, 0xfd, 0xac, 0x1b, 0xe5, 0x3f, 0xc0, 0x27, 0x93, 0xd5, 0x84, 0xdd, 0x6d, 0x32,
	0x1f, 0x43, 0x76, 0x4e, 0xaa, 0x1e, 0x4e, 0x79, 0x9b, 0xf0, 0xcd, 0x96, 0xb7, 0x90, 0x9d, 0xd2,
	0x00, 0x32, 0x3e, 0x0b, 0xe8, 0xfc, 0x44, 0xf9, 0x6d, 0x44, 0x5e, 0xde, 0x31, 0x3c, 0x9e, 0x74,
	0x17, 0xba, 0x53, 0xf6, 0x0e, 0xf7, 0xdf, 0x1f, 0xf8, 0x3f, 0xfa, 0xcd, 0xdf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x93, 0x50, 0xb0, 0xee, 0xdf, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	// Obtains list of rooms available
	Login(ctx context.Context, in *UserCred, opts ...grpc.CallOption) (*Reply, error)
	// Obtains list of rooms available
	GetRooms(ctx context.Context, in *UserCred, opts ...grpc.CallOption) (Chat_GetRoomsClient, error)
	// Connects client to a certain room
	JoinRoom(ctx context.Context, in *RoomRequest, opts ...grpc.CallOption) (*Reply, error)
	// Sends client message to chat history of a certain room
	SendMessage(ctx context.Context, in *ClientMessage, opts ...grpc.CallOption) (*Reply, error)
	// Obtains chat history of a certain room
	GetMessages(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (Chat_GetMessagesClient, error)
	// Obtains the amount of messages in chat history
	GetMessagesCount(ctx context.Context, in *UserCred, opts ...grpc.CallOption) (*Reply, error)
}

type chatClient struct {
	cc grpc.ClientConnInterface
}

func NewChatClient(cc grpc.ClientConnInterface) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) Login(ctx context.Context, in *UserCred, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/chat.Chat/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) GetRooms(ctx context.Context, in *UserCred, opts ...grpc.CallOption) (Chat_GetRoomsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/chat.Chat/GetRooms", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatGetRoomsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Chat_GetRoomsClient interface {
	Recv() (*Room, error)
	grpc.ClientStream
}

type chatGetRoomsClient struct {
	grpc.ClientStream
}

func (x *chatGetRoomsClient) Recv() (*Room, error) {
	m := new(Room)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatClient) JoinRoom(ctx context.Context, in *RoomRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/chat.Chat/JoinRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) SendMessage(ctx context.Context, in *ClientMessage, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/chat.Chat/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) GetMessages(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (Chat_GetMessagesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[1], "/chat.Chat/GetMessages", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatGetMessagesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Chat_GetMessagesClient interface {
	Recv() (*ClientMessage, error)
	grpc.ClientStream
}

type chatGetMessagesClient struct {
	grpc.ClientStream
}

func (x *chatGetMessagesClient) Recv() (*ClientMessage, error) {
	m := new(ClientMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatClient) GetMessagesCount(ctx context.Context, in *UserCred, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/chat.Chat/GetMessagesCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	// Obtains list of rooms available
	Login(context.Context, *UserCred) (*Reply, error)
	// Obtains list of rooms available
	GetRooms(*UserCred, Chat_GetRoomsServer) error
	// Connects client to a certain room
	JoinRoom(context.Context, *RoomRequest) (*Reply, error)
	// Sends client message to chat history of a certain room
	SendMessage(context.Context, *ClientMessage) (*Reply, error)
	// Obtains chat history of a certain room
	GetMessages(*MessageRequest, Chat_GetMessagesServer) error
	// Obtains the amount of messages in chat history
	GetMessagesCount(context.Context, *UserCred) (*Reply, error)
}

// UnimplementedChatServer can be embedded to have forward compatible implementations.
type UnimplementedChatServer struct {
}

func (*UnimplementedChatServer) Login(ctx context.Context, req *UserCred) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedChatServer) GetRooms(req *UserCred, srv Chat_GetRoomsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetRooms not implemented")
}
func (*UnimplementedChatServer) JoinRoom(ctx context.Context, req *RoomRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinRoom not implemented")
}
func (*UnimplementedChatServer) SendMessage(ctx context.Context, req *ClientMessage) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}
func (*UnimplementedChatServer) GetMessages(req *MessageRequest, srv Chat_GetMessagesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetMessages not implemented")
}
func (*UnimplementedChatServer) GetMessagesCount(ctx context.Context, req *UserCred) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMessagesCount not implemented")
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserCred)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Login(ctx, req.(*UserCred))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_GetRooms_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UserCred)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServer).GetRooms(m, &chatGetRoomsServer{stream})
}

type Chat_GetRoomsServer interface {
	Send(*Room) error
	grpc.ServerStream
}

type chatGetRoomsServer struct {
	grpc.ServerStream
}

func (x *chatGetRoomsServer) Send(m *Room) error {
	return x.ServerStream.SendMsg(m)
}

func _Chat_JoinRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).JoinRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/JoinRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).JoinRoom(ctx, req.(*RoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).SendMessage(ctx, req.(*ClientMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_GetMessages_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MessageRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServer).GetMessages(m, &chatGetMessagesServer{stream})
}

type Chat_GetMessagesServer interface {
	Send(*ClientMessage) error
	grpc.ServerStream
}

type chatGetMessagesServer struct {
	grpc.ServerStream
}

func (x *chatGetMessagesServer) Send(m *ClientMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _Chat_GetMessagesCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserCred)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GetMessagesCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/GetMessagesCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GetMessagesCount(ctx, req.(*UserCred))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chat.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Chat_Login_Handler,
		},
		{
			MethodName: "JoinRoom",
			Handler:    _Chat_JoinRoom_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _Chat_SendMessage_Handler,
		},
		{
			MethodName: "GetMessagesCount",
			Handler:    _Chat_GetMessagesCount_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetRooms",
			Handler:       _Chat_GetRooms_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetMessages",
			Handler:       _Chat_GetMessages_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "chat.proto",
}
